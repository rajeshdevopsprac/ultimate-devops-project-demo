name: ci-currency

on:
  push:
    paths:
      - 'src/currency/**'
      - 'pb/demo.proto'
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build essentials, upgrade CMake, and dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential git autoconf libtool pkg-config unzip wget cmake libgtest-dev

          # Upgrade cmake to â‰¥3.27
          wget https://github.com/Kitware/CMake/releases/download/v3.27.9/cmake-3.27.9-linux-x86_64.sh
          chmod +x cmake-3.27.9-linux-x86_64.sh
          sudo ./cmake-3.27.9-linux-x86_64.sh --skip-license --prefix=/usr/local
          cmake --version

          # Install Benchmark
          git clone https://github.com/google/benchmark.git
          cd benchmark
          cmake -E make_directory "build"
          cmake -E chdir "build" cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON ..
          cmake --build build --config Release
          sudo cmake --install build
          cd ..

          # Install Protobuf
          git clone --branch v24.3 https://github.com/protocolbuffers/protobuf.git
          cd protobuf
          git submodule update --init --recursive
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          sudo make install
          sudo ldconfig
          cd ../..

          # Install OpenTelemetry C++
          git clone https://github.com/open-telemetry/opentelemetry-cpp.git
          cd opentelemetry-cpp
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF
          make -j$(nproc)
          sudo make install
          cd ../..

      - name: Copy proto file
        run: |
          mkdir -p src/currency/proto
          cp pb/demo.proto src/currency/proto/demo.proto

      - name: Build currency service
        run: |
          cd src/currency
          mkdir -p build
          cd build
          cmake ..
          make -j$(nproc)

  docker:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/currency/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/currency:${{ github.run_id }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Kubernetes manifest
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/currency:${{ github.run_id }}|" kubernetes/currency/deploy.yaml

      - name: Commit updated manifest
        run: |
          git config --global user.email "rkr11391@gmail.com"
          git config --global user.name "rajeshdevopsprac"
          git add kubernetes/currency/deploy.yaml
          git commit -m "[CI] update currency image tag"
          git push origin HEAD:main -f
