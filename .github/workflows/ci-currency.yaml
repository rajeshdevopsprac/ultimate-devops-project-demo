name: ci-currency

on:
  push:
    paths:
      - 'src/currency/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake autoconf libtool pkg-config git

      - name: Install Protobuf v21.12
        run: |
          git clone --depth=1 --branch v21.12 https://github.com/protocolbuffers/protobuf.git
          cd protobuf/cmake
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -Dprotobuf_BUILD_TESTS=OFF
          make -j$(nproc)
          sudo make install
          cd ../../../
          rm -rf protobuf

      - name: Install gRPC
        run: |
          git clone --recurse-submodules -b v1.59.0 https://github.com/grpc/grpc
          cd grpc
          mkdir -p cmake/build
          cd cmake/build
          cmake ../.. -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          sudo make install
          cd ../../../
          rm -rf grpc

      - name: Install OpenTelemetry C++ SDK
        run: |
          git clone https://github.com/open-telemetry/opentelemetry-cpp.git
          cd opentelemetry-cpp
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF
          make -j$(nproc)
          sudo make install
          cd ../../
          rm -rf opentelemetry-cpp

      - name: Build Currency Service
        run: |
          cd src/currency
          mkdir -p build
          cd build
          cmake ..
          make -j$(nproc)
          ls -la

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ./src/currency
          file: ./src/currency/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/currency:${{ github.run_id }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.30.1  # Adjust to your cluster version

      - name: Set KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - name: Update Kubernetes Deployment
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/currency:${{ github.run_id }}|" kubernetes/currency/deploy.yaml

      - name: Apply Deployment
        run: |
          kubectl apply -f kubernetes/currency/deploy.yaml
